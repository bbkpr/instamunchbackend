# Base interface for all mutation responses providing consistent error handling
interface MutationResponse {
    "HTTP-style response code"
    code: String!
    "Operation success indicator"
    success: Boolean!
    "Human-readable status message"
    message: String!
    "If ACL permission was denied for this operation"
    permissionDenied: Boolean
}

enum PermissionOperator {
  AND  # User must have all permissions
  OR   # User must have at least one permission
}

directive @requirePermission(
  permissions: [Permission!]!
  operator: PermissionOperator = AND  # Optional operator for combining permissions
) on FIELD_DEFINITION

"Auth Roles"
enum Role {
    TECHNICIAN
    OPERATOR
    ADMINISTRATOR
}

"Auth Permissions"
enum Permission {
    # Technician permissions
    READ_ITEMS
    READ_MACHINES
    UPDATE_MACHINE_ITEMS
    READ_LOCATIONS

    # Operator permissions
    CREATE_ITEMS
    UPDATE_ITEMS
    UPDATE_MACHINE_PRICES
    CREATE_MACHINES
    UPDATE_MACHINES

    # Administrator permissions
    DELETE_ITEMS
    DELETE_MACHINES
    MANAGE_LOCATIONS
    MANAGE_MACHINE_TYPES
    MANAGE_MANUFACTURERS
}

type Item {
    id: ID!
    "Name of the item"
    name: String!
    "Default price if no specific pricing policy exists"
    basePrice: Float
    "Expected shelf life, in days, of newly purchased items"
    expirationPeriod: Int
    createdAt: String
    updatedAt: String
    machineItems: [MachineItem]
}

type MachineItem {
    id: ID!
    "Optional override for item name in specific machine"
    name: String
    quantity: Int!
    machineId: ID!
    machine: Machine
    itemId: ID!
    item: Item
}

type MachineManufacturer {
    id: ID!
    name: String!
    createdAt: String!
    updatedAt: String!
    machines: [Machine]
    machineTypes: [MachineType]
}

type MachineType {
    id: ID!
    name: String!
    createdAt: String!
    updatedAt: String!
    machines: [Machine]
    manufacturerId: ID!
    manufacturer: MachineManufacturer!
}

type Machine {
    id: ID!
    name: String!
    machineItems: [MachineItem]
    machineLocations: [MachineLocation]
    machineType: MachineType
    manufacturer: MachineManufacturer
    createdAt: String
    updatedAt: String
}

type Location {
    id: ID!
    address1: String!
    address2: String
    city: String!
    stateOrProvince: String!
    postalCode: String!
    country: String!
    createdAt: String!
    updatedAt: String!
    machineLocations: [MachineLocation]
}

type MachineLocation {
    id: ID!
    "Optional display name for this machine-location pairing"
    name: String
    machineId: ID!
    machine: Machine
    locationId: ID!
    location: Location
    createdAt: String!
    updatedAt: String!
}

type User {
    id: ID!
    email: String!
    name: String!
    role: Role!
    createdAt: String!
    updatedAt: String!
}

type Query {
    "Get the currently logged in User"
    me: User @requirePermission(permissions: [READ_ITEMS])

    "Get all Items, from everywhere"
    getItems: [Item] @requirePermission(permissions: [READ_ITEMS])
    "Get Items in a specific Machine"
    getItemsByMachine(machineId: ID!): [MachineItem!] @requirePermission(permissions: [READ_ITEMS])
    "Get all Locations, from everywhere"
    getLocations: [Location] @requirePermission(permissions: [READ_LOCATIONS])
    "Get Locations stocking a specific Item"
    getLocationsByItem(itemId: ID!): [Location!] @requirePermission(permissions: [READ_LOCATIONS])
    "Get Locations with a Machine matching a name (case insensitive)"
    getLocationsByMachineName(machineName: String!): [Location!]!

    getMachine(machineId: ID!): Machine @requirePermission(permissions: [READ_MACHINES])
    "Get all Machines, from everywhere"
    getMachines: [Machine] @requirePermission(permissions: [READ_MACHINES])
    "Get all MachineLocations"
    getMachineLocations: [MachineLocation!] @requirePermission(permissions: [READ_MACHINES])
    "Get a MachineManufacturer by ID"
    getMachineManufacturer(id: ID!): MachineManufacturer @requirePermission(permissions: [READ_MACHINES])
    "Get all MachineManufacturers"
    getMachineManufacturers: [MachineManufacturer!]! @requirePermission(permissions: [READ_MACHINES])
    "Get a MachineType by ID"
    getMachineType(id: ID!): MachineType @requirePermission(permissions: [READ_MACHINES])
    "Get all MachineTypes"
    getMachineTypes: [MachineType!]! @requirePermission(permissions: [READ_MACHINES])
    "Get all Machines stocking a specific Item"
    getMachinesByItem(itemId: ID!): [MachineItem!] @requirePermission(permissions: [READ_MACHINES])
    "Get Machines at a specific Location"
    getMachinesByLocation(locationId: ID!): [Machine!] @requirePermission(permissions: [READ_MACHINES])
    "Get all MachineItems, from everywhere"
    getMachineItems: [MachineItem] @requirePermission(permissions: [READ_MACHINES])
}

"Log in"
input LoginInput {
  email: String!
  password: String!
}

"Create Item"
input CreateItemInput {
    name: String!
    basePrice: Float!
    expirationPeriod: Int!
}

"Update Item"
input UpdateItemInput {
    id: ID!
    name: String
    basePrice: Float
    expirationPeriod: Int
}

"Create Machine"
input CreateMachineInput {
    name: String!
    machineTypeId: ID!
    manufacturerId: ID!
}

"Update Machine"
input UpdateMachineInput {
    id: ID!
    name: String
    machineTypeId: ID
    manufacturerId: ID
}

"Create Location"
input CreateLocationInput {
    address1: String!
    address2: String
    city: String!
    stateOrProvince: String!
    postalCode: String!
    country: String!
}

"Update Location"
input UpdateLocationInput {
    id: ID!
    address1: String
    address2: String
    city: String
    stateOrProvince: String
    postalCode: String!
    country: String
}

"Assign a Machine to a Location"
input CreateMachineLocationInput {
    name: String!
    machineId: ID!
    locationId: ID!
}

"Update a MachineLocation relation"
input UpdateMachineLocationInput {
    id: ID!
    name: String
    machineId: ID
    locationId: ID
}

"Assign an Item to a Machine"
input CreateMachineItemInput {
    machineId: ID!
    itemId: ID!
    name: String
    quantity: Int!
    setPrice: Float
}

"Create a Manufacturer"
input CreateMachineManufacturerInput {
    name: String!
}

"Update a Manufacturer"
input UpdateMachineManufacturerInput {
    id: ID!
    name: String!
}

"Create a MachineType"
input CreateMachineTypeInput {
    name: String!
    manufacturerId: ID!
}

"Update a MachineType"
input UpdateMachineTypeInput {
    id: ID!
    name: String
    manufacturerId: ID
}

"Login Mutation Response"
type LoginResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  permissionDenied: Boolean
  token: String
  user: User
}

type CreateItemMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    item: Item
}

type UpdateItemMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    item: Item
}

type DeleteItemMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
}

type CreateMachineMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    machine: Machine
    permissionDenied: Boolean
}

type UpdateMachineMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    machine: Machine
    permissionDenied: Boolean
}

type DeleteMachineMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
}

type CreateLocationMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    location: Location
}

type UpdateLocationMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    location: Location
}

type DeleteLocationMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
}

type CreateMachineItemMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    machineItem: MachineItem
}

type DeleteMachineItemMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
}

type UpdateMachineItemsMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    machineItems: [MachineItem]
}

type CreateMachineLocationMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    machineLocation: MachineLocation
}

type UpdateMachineLocationMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    machineLocation: MachineLocation
}

type DeleteMachineLocationMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
}

type CreateMachineManufacturerMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    manufacturer: MachineManufacturer
}

type UpdateMachineManufacturerMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    manufacturer: MachineManufacturer
}

type DeleteMachineManufacturerMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
}

type CreateMachineTypeMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    machineType: MachineType
}

type UpdateMachineTypeMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
    machineType: MachineType
}

type DeleteMachineTypeMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    permissionDenied: Boolean
}

# Update and overwrite ALL Items in the Machine
input UpdateMachineItemsInput {
    machineId: ID!
    itemIds: [ID!]!
}

type Mutation {
    "Log in and retrieve an auth token"
    login(input: LoginInput!): LoginResponse!

    "Create a new Item"
    createItem(input: CreateItemInput!): CreateItemMutationResponse! @requirePermission(permissions: [CREATE_ITEMS])
    "Update an existing Item"
    updateItem(input: UpdateItemInput!): UpdateItemMutationResponse! @requirePermission(permissions: [UPDATE_ITEMS])
    "Delete an existing Item"
    deleteItem(id: ID!): DeleteItemMutationResponse! @requirePermission(permissions: [DELETE_ITEMS])

    "Create a new Machine"
    createMachine(input: CreateMachineInput!): CreateMachineMutationResponse! @requirePermission(permissions: [CREATE_MACHINES])
    "Update an existing Machine"
    updateMachine(input: UpdateMachineInput!): CreateMachineMutationResponse! @requirePermission(permissions: [UPDATE_MACHINES])
    "Delete a Machine"
    deleteMachine(id: ID!): DeleteMachineMutationResponse! @requirePermission(permissions: [DELETE_MACHINES])

    "Add an Item to a Machine"
    createMachineItem(input: CreateMachineItemInput!): CreateMachineItemMutationResponse! @requirePermission(permissions: [UPDATE_MACHINE_ITEMS])
    "Update all MachineItems (be VERY careful with this)"
    updateMachineItems(input: UpdateMachineItemsInput!): UpdateMachineItemsMutationResponse! @requirePermission(permissions: [UPDATE_MACHINE_ITEMS])
    "Delete an Item from a Machine"
    deleteMachineItem(id: ID!): DeleteMachineItemMutationResponse! @requirePermission(permissions: [UPDATE_MACHINE_ITEMS])

    "Assign a Machine to a Location"
    createMachineLocation(input: CreateMachineLocationInput!): CreateMachineLocationMutationResponse! @requirePermission(permissions: [UPDATE_MACHINES])
    "Update a MachineLocation relation"
    updateMachineLocation(input: UpdateMachineLocationInput!): UpdateMachineLocationMutationResponse! @requirePermission(permissions: [UPDATE_MACHINES])
    "Delete a MachineLocation relation"
    deleteMachineLocation(id: ID!): DeleteMachineLocationMutationResponse! @requirePermission(permissions: [UPDATE_MACHINES])

    "Assign a Machine to a Manufacturer"
    createMachineManufacturer(input: CreateMachineManufacturerInput!): CreateMachineManufacturerMutationResponse! @requirePermission(permissions: [MANAGE_MANUFACTURERS])
    "Update a MachineManufacturer relation"
    updateMachineManufacturer(input: UpdateMachineManufacturerInput!): UpdateMachineManufacturerMutationResponse! @requirePermission(permissions: [MANAGE_MANUFACTURERS])
    "Delete a MachineManufacturer relation"
    deleteMachineManufacturer(id: ID!): DeleteMachineManufacturerMutationResponse! @requirePermission(permissions: [MANAGE_MANUFACTURERS])

    "Create a new Location"
    createLocation(input: CreateLocationInput!): CreateLocationMutationResponse! @requirePermission(permissions: [MANAGE_LOCATIONS])
    "Update a Location"
    updateLocation(input: UpdateLocationInput!): UpdateLocationMutationResponse! @requirePermission(permissions: [MANAGE_LOCATIONS])
    "Delete a Location"
    deleteLocation(id: ID!): DeleteLocationMutationResponse! @requirePermission(permissions: [MANAGE_LOCATIONS])

    "Assign a Machine to a Type"
    createMachineType(input: CreateMachineTypeInput!): CreateMachineTypeMutationResponse! @requirePermission(permissions: [MANAGE_MACHINE_TYPES])
    "Update a MachineType relation"
    updateMachineType(input: UpdateMachineTypeInput!): UpdateMachineTypeMutationResponse! @requirePermission(permissions: [MANAGE_MACHINE_TYPES])
    "Delete a MachineType relation"
    deleteMachineType(id: ID!): DeleteMachineTypeMutationResponse! @requirePermission(permissions: [MANAGE_MACHINE_TYPES])
}